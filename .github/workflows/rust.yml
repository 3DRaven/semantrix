name: Rust

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache APT packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: protobuf-compiler
          version: 1.0

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.86.0
          override: true

      - name: Install protobuf-compiler
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

      - name: Build
        run: cargo build --release

      - name: Prepare artifact directory
        run: |
          mkdir -p dist
          cp target/release/semantrix dist/
          cp -r resources dist/
          cp config.yml dist/
          cp start.sh dist/
          cp README.md dist/

      - name: Create zip archive
        run: cd dist && zip -r ../semantrix-linux-x86_64.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: semantrix-linux-x86_64
          path: semantrix-linux-x86_64.zip
